# -*- coding: utf-8 -*-
################################################################################
## Form generated from reading UI file 'MainWindow.ui'
##
## Created by: Qt User Interface Compiler version 6.7.2
##
## WARNING
################################################################################
from PySide6.QtCore import (QCoreApplication, QDate, QDateTime, QLocale,
    QMetaObject, QObject, QPoint, QRect,
    QSize, QTime, QUrl, Qt)
from PySide6.QtGui import (QAction, QBrush, QColor, QConicalGradient,
    QCursor, QFont, QFontDatabase, QGradient,
    QIcon, QImage, QKeySequence, QLinearGradient,
    QPainter, QPalette, QPixmap, QRadialGradient,
    QTransform)
from PySide6.QtWidgets import (QApplication, QCheckBox, QDockWidget, QGraphicsView,
    QGridLayout, QGroupBox, QHBoxLayout, QLabel,
    QLineEdit, QListView, QListWidget, QListWidgetItem,
    QMainWindow, QMenu, QMenuBar, QProgressBar,
    QPushButton, QSizePolicy, QSlider, QSpacerItem,
    QTabWidget, QVBoxLayout, QWidget)
from app.ui.core import media_rc

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        if not MainWindow.objectName():
            MainWindow.setObjectName(u"MainWindow")
        MainWindow.resize(1376, 585)
        font = QFont()
        font.setPointSize(10)
        MainWindow.setFont(font)
        icon = QIcon()
        icon.addFile(u":/media/media/visomaster_small.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        MainWindow.setWindowIcon(icon)
        self.actionExit = QAction(MainWindow)
        self.actionExit.setObjectName(u"actionExit")
        self.actionLoad_Embeddings = QAction(MainWindow)
        self.actionLoad_Embeddings.setObjectName(u"actionLoad_Embeddings")
        self.actionSave_Embeddings = QAction(MainWindow)
        self.actionSave_Embeddings.setObjectName(u"actionSave_Embeddings")
        self.actionSave_Embeddings_As = QAction(MainWindow)
        self.actionSave_Embeddings_As.setObjectName(u"actionSave_Embeddings_As")
        self.actionOpen_Videos_Folder = QAction(MainWindow)
        self.actionOpen_Videos_Folder.setObjectName(u"actionOpen_Videos_Folder")
        self.actionOpen_Video_Files = QAction(MainWindow)
        self.actionOpen_Video_Files.setObjectName(u"actionOpen_Video_Files")
        self.actionLoad_Source_Images_Folder = QAction(MainWindow)
        self.actionLoad_Source_Images_Folder.setObjectName(u"actionLoad_Source_Images_Folder")
        self.actionLoad_Source_Image_Files = QAction(MainWindow)
        self.actionLoad_Source_Image_Files.setObjectName(u"actionLoad_Source_Image_Files")
        self.actionView_Fullscreen_F11 = QAction(MainWindow)
        self.actionView_Fullscreen_F11.setObjectName(u"actionView_Fullscreen_F11")
        self.actionTest = QAction(MainWindow)
        self.actionTest.setObjectName(u"actionTest")
        self.actionLoad_Saved_Workspace = QAction(MainWindow)
        self.actionLoad_Saved_Workspace.setObjectName(u"actionLoad_Saved_Workspace")
        self.actionSave_Current_Workspace = QAction(MainWindow)
        self.actionSave_Current_Workspace.setObjectName(u"actionSave_Current_Workspace")
        self.actionTest_2 = QAction(MainWindow)
        self.actionTest_2.setObjectName(u"actionTest_2")
        self.actionLoad_SavedWorkspace = QAction(MainWindow)
        self.actionLoad_SavedWorkspace.setObjectName(u"actionLoad_SavedWorkspace")
        self.actionSave_CurrentWorkspace = QAction(MainWindow)
        self.actionSave_CurrentWorkspace.setObjectName(u"actionSave_CurrentWorkspace")
        self.centralwidget = QWidget(MainWindow)
        self.centralwidget.setObjectName(u"centralwidget")
        self.horizontalLayout = QHBoxLayout(self.centralwidget)
        self.horizontalLayout.setObjectName(u"horizontalLayout")
        self.mediaLayout = QWidget(self.centralwidget)
        self.mediaLayout.setObjectName(u"mediaLayout")
        sizePolicy = QSizePolicy(QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Preferred)
        sizePolicy.setHorizontalStretch(2)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.mediaLayout.sizePolicy().hasHeightForWidth())
        self.mediaLayout.setSizePolicy(sizePolicy)
        self.verticalLayout = QVBoxLayout(self.mediaLayout)
        self.verticalLayout.setObjectName(u"verticalLayout")
        self.panelVisibilityCheckBoxLayout = QHBoxLayout()
        self.panelVisibilityCheckBoxLayout.setObjectName(u"panelVisibilityCheckBoxLayout")
        self.mediaPanelCheckBox = QCheckBox(self.mediaLayout)
        self.mediaPanelCheckBox.setObjectName(u"mediaPanelCheckBox")
        self.mediaPanelCheckBox.setChecked(True)
        self.panelVisibilityCheckBoxLayout.addWidget(self.mediaPanelCheckBox)
        self.facesPanelCheckBox = QCheckBox(self.mediaLayout)
        self.facesPanelCheckBox.setObjectName(u"facesPanelCheckBox")
        self.facesPanelCheckBox.setChecked(True)
        self.panelVisibilityCheckBoxLayout.addWidget(self.facesPanelCheckBox)
        self.parametersPanelCheckBox = QCheckBox(self.mediaLayout)
        self.parametersPanelCheckBox.setObjectName(u"parametersPanelCheckBox")
        self.parametersPanelCheckBox.setChecked(True)
        self.panelVisibilityCheckBoxLayout.addWidget(self.parametersPanelCheckBox)
        self.horizontalSpacer_8 = QSpacerItem(20, 20, QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Minimum)
        self.panelVisibilityCheckBoxLayout.addItem(self.horizontalSpacer_8)
        self.faceCompareCheckBox = QCheckBox(self.mediaLayout)
        self.faceCompareCheckBox.setObjectName(u"faceCompareCheckBox")
        self.panelVisibilityCheckBoxLayout.addWidget(self.faceCompareCheckBox)
        self.faceMaskCheckBox = QCheckBox(self.mediaLayout)
        self.faceMaskCheckBox.setObjectName(u"faceMaskCheckBox")
        self.panelVisibilityCheckBoxLayout.addWidget(self.faceMaskCheckBox)
        self.verticalLayout.addLayout(self.panelVisibilityCheckBoxLayout)
        self.graphicsViewFrame = QGraphicsView(self.mediaLayout)
        self.graphicsViewFrame.setObjectName(u"graphicsViewFrame")
        self.verticalLayout.addWidget(self.graphicsViewFrame)
        self.verticalLayoutMediaControls = QVBoxLayout()
        self.verticalLayoutMediaControls.setObjectName(u"verticalLayoutMediaControls")
        self.horizontalLayoutMediaSlider = QHBoxLayout()
        self.horizontalLayoutMediaSlider.setObjectName(u"horizontalLayoutMediaSlider")
        self.videoSeekSlider = QSlider(self.mediaLayout)
        self.videoSeekSlider.setObjectName(u"videoSeekSlider")
        self.videoSeekSlider.setOrientation(Qt.Orientation.Horizontal)
        self.horizontalLayoutMediaSlider.addWidget(self.videoSeekSlider)
        self.videoSeekLineEdit = QLineEdit(self.mediaLayout)
        self.videoSeekLineEdit.setObjectName(u"videoSeekLineEdit")
        sizePolicy1 = QSizePolicy(QSizePolicy.Policy.Preferred, QSizePolicy.Policy.Fixed)
        sizePolicy1.setHorizontalStretch(0)
        sizePolicy1.setVerticalStretch(0)
        sizePolicy1.setHeightForWidth(self.videoSeekLineEdit.sizePolicy().hasHeightForWidth())
        self.videoSeekLineEdit.setSizePolicy(sizePolicy1)
        self.videoSeekLineEdit.setMaximumSize(QSize(70, 16777215))
        self.videoSeekLineEdit.setClearButtonEnabled(False)
        self.horizontalLayoutMediaSlider.addWidget(self.videoSeekLineEdit)
        self.verticalLayoutMediaControls.addLayout(self.horizontalLayoutMediaSlider)
        self.horizontalLayoutMediaButtons = QHBoxLayout()
        self.horizontalLayoutMediaButtons.setObjectName(u"horizontalLayoutMediaButtons")
        self.horizontalSpacer = QSpacerItem(40, 20, QSizePolicy.Policy.MinimumExpanding, QSizePolicy.Policy.Minimum)
        self.horizontalLayoutMediaButtons.addItem(self.horizontalSpacer)
        self.frameRewindButton = QPushButton(self.mediaLayout)
        self.frameRewindButton.setObjectName(u"frameRewindButton")
        sizePolicy2 = QSizePolicy(QSizePolicy.Policy.MinimumExpanding, QSizePolicy.Policy.Fixed)
        sizePolicy2.setHorizontalStretch(0)
        sizePolicy2.setVerticalStretch(0)
        sizePolicy2.setHeightForWidth(self.frameRewindButton.sizePolicy().hasHeightForWidth())
        self.frameRewindButton.setSizePolicy(sizePolicy2)
        self.frameRewindButton.setMaximumSize(QSize(100, 16777215))
        icon1 = QIcon()
        icon1.addFile(u":/media/media/previous_marker_off.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.frameRewindButton.setIcon(icon1)
        self.frameRewindButton.setFlat(True)
        self.horizontalLayoutMediaButtons.addWidget(self.frameRewindButton)
        self.horizontalSpacer_3 = QSpacerItem(40, 20, QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Minimum)
        self.horizontalLayoutMediaButtons.addItem(self.horizontalSpacer_3)
        self.buttonMediaRecord = QPushButton(self.mediaLayout)
        self.buttonMediaRecord.setObjectName(u"buttonMediaRecord")
        icon2 = QIcon()
        icon2.addFile(u":/media/media/rec_off.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.buttonMediaRecord.setIcon(icon2)
        self.buttonMediaRecord.setCheckable(True)
        self.buttonMediaRecord.setFlat(True)
        self.horizontalLayoutMediaButtons.addWidget(self.buttonMediaRecord)
        self.horizontalSpacer_6 = QSpacerItem(30, 20, QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Minimum)
        self.horizontalLayoutMediaButtons.addItem(self.horizontalSpacer_6)
        self.buttonMediaPlay = QPushButton(self.mediaLayout)
        self.buttonMediaPlay.setObjectName(u"buttonMediaPlay")
        sizePolicy3 = QSizePolicy(QSizePolicy.Policy.MinimumExpanding, QSizePolicy.Policy.Minimum)
        sizePolicy3.setHorizontalStretch(0)
        sizePolicy3.setVerticalStretch(0)
        sizePolicy3.setHeightForWidth(self.buttonMediaPlay.sizePolicy().hasHeightForWidth())
        self.buttonMediaPlay.setSizePolicy(sizePolicy3)
        self.buttonMediaPlay.setMaximumSize(QSize(100, 16777215))
        icon3 = QIcon()
        icon3.addFile(u":/media/media/play_off.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.buttonMediaPlay.setIcon(icon3)
        self.buttonMediaPlay.setCheckable(True)
        self.buttonMediaPlay.setFlat(True)
        self.horizontalLayoutMediaButtons.addWidget(self.buttonMediaPlay)
        self.horizontalSpacer_4 = QSpacerItem(40, 20, QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Minimum)
        self.horizontalLayoutMediaButtons.addItem(self.horizontalSpacer_4)
        self.frameAdvanceButton = QPushButton(self.mediaLayout)
        self.frameAdvanceButton.setObjectName(u"frameAdvanceButton")
        sizePolicy2.setHeightForWidth(self.frameAdvanceButton.sizePolicy().hasHeightForWidth())
        self.frameAdvanceButton.setSizePolicy(sizePolicy2)
        self.frameAdvanceButton.setMaximumSize(QSize(100, 16777215))
        icon4 = QIcon()
        icon4.addFile(u":/media/media/next_marker_off.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.frameAdvanceButton.setIcon(icon4)
        self.frameAdvanceButton.setFlat(True)
        self.horizontalLayoutMediaButtons.addWidget(self.frameAdvanceButton)
        self.horizontalSpacer_2 = QSpacerItem(40, 20, QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Minimum)
        self.horizontalLayoutMediaButtons.addItem(self.horizontalSpacer_2)
        self.addMarkerButton = QPushButton(self.mediaLayout)
        self.addMarkerButton.setObjectName(u"addMarkerButton")
        icon5 = QIcon()
        icon5.addFile(u":/media/media/add_marker_hover.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.addMarkerButton.setIcon(icon5)
        self.addMarkerButton.setFlat(True)
        self.horizontalLayoutMediaButtons.addWidget(self.addMarkerButton)
        self.removeMarkerButton = QPushButton(self.mediaLayout)
        self.removeMarkerButton.setObjectName(u"removeMarkerButton")
        icon6 = QIcon()
        icon6.addFile(u":/media/media/remove_marker_hover.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.removeMarkerButton.setIcon(icon6)
        self.removeMarkerButton.setFlat(True)
        self.horizontalLayoutMediaButtons.addWidget(self.removeMarkerButton)
        self.previousMarkerButton = QPushButton(self.mediaLayout)
        self.previousMarkerButton.setObjectName(u"previousMarkerButton")
        icon7 = QIcon()
        icon7.addFile(u":/media/media/previous_marker_hover.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.previousMarkerButton.setIcon(icon7)
        self.previousMarkerButton.setFlat(True)
        self.horizontalLayoutMediaButtons.addWidget(self.previousMarkerButton)
        self.nextMarkerButton = QPushButton(self.mediaLayout)
        self.nextMarkerButton.setObjectName(u"nextMarkerButton")
        icon8 = QIcon()
        icon8.addFile(u":/media/media/next_marker_hover.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.nextMarkerButton.setIcon(icon8)
        self.nextMarkerButton.setFlat(True)
        self.horizontalLayoutMediaButtons.addWidget(self.nextMarkerButton)
        self.viewFullScreenButton = QPushButton(self.mediaLayout)
        self.viewFullScreenButton.setObjectName(u"viewFullScreenButton")
        icon9 = QIcon()
        icon9.addFile(u":/media/media/fullscreen.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.viewFullScreenButton.setIcon(icon9)
        self.viewFullScreenButton.setFlat(True)
        self.horizontalLayoutMediaButtons.addWidget(self.viewFullScreenButton)
        self.horizontalSpacer_5 = QSpacerItem(40, 20, QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Minimum)
        self.horizontalLayoutMediaButtons.addItem(self.horizontalSpacer_5)
        self.verticalLayoutMediaControls.addLayout(self.horizontalLayoutMediaButtons)
        self.verticalLayout.addLayout(self.verticalLayoutMediaControls)
        self.verticalSpacer = QSpacerItem(20, 5, QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Preferred)
        self.verticalLayout.addItem(self.verticalSpacer)
        self.facesPanelGroupBox = QGroupBox(self.mediaLayout)
        self.facesPanelGroupBox.setObjectName(u"facesPanelGroupBox")
        sizePolicy1.setHeightForWidth(self.facesPanelGroupBox.sizePolicy().hasHeightForWidth())
        self.facesPanelGroupBox.setSizePolicy(sizePolicy1)
        self.facesPanelGroupBox.setMinimumSize(QSize(0, 180))
        self.facesPanelGroupBox.setMaximumSize(QSize(16777215, 225))
        self.facesPanelGroupBox.setAutoFillBackground(False)
        self.facesPanelGroupBox.setFlat(True)
        self.facesPanelGroupBox.setCheckable(False)
        self.gridLayout_2 = QGridLayout(self.facesPanelGroupBox)
        self.gridLayout_2.setObjectName(u"gridLayout_2")
        self.facesButtonsWidget = QWidget(self.facesPanelGroupBox)
        self.facesButtonsWidget.setObjectName(u"facesButtonsWidget")
        sizePolicy4 = QSizePolicy(QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Preferred)
        sizePolicy4.setHorizontalStretch(0)
        sizePolicy4.setVerticalStretch(0)
        sizePolicy4.setHeightForWidth(self.facesButtonsWidget.sizePolicy().hasHeightForWidth())
        self.facesButtonsWidget.setSizePolicy(sizePolicy4)
        self.verticalLayout_8 = QVBoxLayout(self.facesButtonsWidget)
        self.verticalLayout_8.setObjectName(u"verticalLayout_8")
        self.verticalWidget = QWidget(self.facesButtonsWidget)
        self.verticalWidget.setObjectName(u"verticalWidget")
        self.controlButtonsLayout = QVBoxLayout(self.verticalWidget)
        self.controlButtonsLayout.setObjectName(u"controlButtonsLayout")
        self.findTargetFacesButton = QPushButton(self.verticalWidget)
        self.findTargetFacesButton.setObjectName(u"findTargetFacesButton")
        self.findTargetFacesButton.setMinimumSize(QSize(100, 0))
        self.findTargetFacesButton.setCheckable(False)
        self.findTargetFacesButton.setFlat(True)
        self.controlButtonsLayout.addWidget(self.findTargetFacesButton)
        self.clearTargetFacesButton = QPushButton(self.verticalWidget)
        self.clearTargetFacesButton.setObjectName(u"clearTargetFacesButton")
        self.clearTargetFacesButton.setCheckable(False)
        self.clearTargetFacesButton.setFlat(True)
        self.controlButtonsLayout.addWidget(self.clearTargetFacesButton)
        self.swapfacesButton = QPushButton(self.verticalWidget)
        self.swapfacesButton.setObjectName(u"swapfacesButton")
        self.swapfacesButton.setCheckable(True)
        self.swapfacesButton.setFlat(True)
        self.controlButtonsLayout.addWidget(self.swapfacesButton)
        self.editFacesButton = QPushButton(self.verticalWidget)
        self.editFacesButton.setObjectName(u"editFacesButton")
        self.editFacesButton.setCheckable(True)
        self.editFacesButton.setFlat(True)
        self.controlButtonsLayout.addWidget(self.editFacesButton)
        self.verticalLayout_8.addWidget(self.verticalWidget)
        self.gridLayout_2.addWidget(self.facesButtonsWidget, 1, 0, 1, 1)
        self.inputEmbeddingsList = QListWidget(self.facesPanelGroupBox)
        self.inputEmbeddingsList.setObjectName(u"inputEmbeddingsList")
        sizePolicy5 = QSizePolicy(QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Fixed)
        sizePolicy5.setHorizontalStretch(4)
        sizePolicy5.setVerticalStretch(0)
        sizePolicy5.setHeightForWidth(self.inputEmbeddingsList.sizePolicy().hasHeightForWidth())
        self.inputEmbeddingsList.setSizePolicy(sizePolicy5)
        self.inputEmbeddingsList.setMinimumSize(QSize(320, 120))
        self.inputEmbeddingsList.setMaximumSize(QSize(16777215, 120))
        self.inputEmbeddingsList.setVerticalScrollBarPolicy(Qt.ScrollBarAlwaysOff)
        self.inputEmbeddingsList.setHorizontalScrollBarPolicy(Qt.ScrollBarAsNeeded)
        self.inputEmbeddingsList.setUniformItemSizes(True)
        self.inputEmbeddingsList.setViewMode(QListView.IconMode)
        self.inputEmbeddingsList.setMovement(QListView.Static)
        self.inputEmbeddingsList.setWrapping(True)
        self.inputEmbeddingsList.setLayoutMode(QListView.Batched)
        self.inputEmbeddingsList.setSpacing(4)
        self.inputEmbeddingsList.setAutoScroll(False)
        self.gridLayout_2.addWidget(self.inputEmbeddingsList, 1, 2, 1, 1)
        self.horizontalLayout_4 = QHBoxLayout()
        self.horizontalLayout_4.setObjectName(u"horizontalLayout_4")
        self.saveImageButton = QPushButton(self.facesPanelGroupBox)
        self.saveImageButton.setObjectName(u"saveImageButton")
        self.saveImageButton.setFlat(True)
        self.horizontalLayout_4.addWidget(self.saveImageButton)
        self.gridLayout_2.addLayout(self.horizontalLayout_4, 0, 0, 1, 1)
        self.horizontalLayout_3 = QHBoxLayout()
        self.horizontalLayout_3.setObjectName(u"horizontalLayout_3")
        self.inputEmbeddingsSearchBox = QLineEdit(self.facesPanelGroupBox)
        self.inputEmbeddingsSearchBox.setObjectName(u"inputEmbeddingsSearchBox")
        self.horizontalLayout_3.addWidget(self.inputEmbeddingsSearchBox)
        self.openEmbeddingButton = QPushButton(self.facesPanelGroupBox)
        self.openEmbeddingButton.setObjectName(u"openEmbeddingButton")
        icon10 = QIcon()
        icon10.addFile(u":/media/media/open_file.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.openEmbeddingButton.setIcon(icon10)
        self.openEmbeddingButton.setFlat(True)
        self.horizontalLayout_3.addWidget(self.openEmbeddingButton)
        self.saveEmbeddingButton = QPushButton(self.facesPanelGroupBox)
        self.saveEmbeddingButton.setObjectName(u"saveEmbeddingButton")
        icon11 = QIcon()
        icon11.addFile(u":/media/media/save_file.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.saveEmbeddingButton.setIcon(icon11)
        self.saveEmbeddingButton.setFlat(True)
        self.horizontalLayout_3.addWidget(self.saveEmbeddingButton)
        self.saveEmbeddingAsButton = QPushButton(self.facesPanelGroupBox)
        self.saveEmbeddingAsButton.setObjectName(u"saveEmbeddingAsButton")
        icon12 = QIcon()
        icon12.addFile(u":/media/media/save_file_as.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.saveEmbeddingAsButton.setIcon(icon12)
        self.saveEmbeddingAsButton.setFlat(True)
        self.horizontalLayout_3.addWidget(self.saveEmbeddingAsButton)
        self.gridLayout_2.addLayout(self.horizontalLayout_3, 0, 2, 1, 1)
        self.targetFacesList = QListWidget(self.facesPanelGroupBox)
        self.targetFacesList.setObjectName(u"targetFacesList")
        self.targetFacesList.setAutoFillBackground(True)
        self.targetFacesList.setAutoScroll(False)
        self.gridLayout_2.addWidget(self.targetFacesList, 1, 1, 1, 1)
        self.verticalLayout.addWidget(self.facesPanelGroupBox)
        self.horizontalLayout.addWidget(self.mediaLayout)
        MainWindow.setCentralWidget(self.centralwidget)
        self.input_Target_DockWidget = QDockWidget(MainWindow)
        self.input_Target_DockWidget.setObjectName(u"input_Target_DockWidget")
        sizePolicy6 = QSizePolicy(QSizePolicy.Policy.Preferred, QSizePolicy.Policy.Preferred)
        sizePolicy6.setHorizontalStretch(4)
        sizePolicy6.setVerticalStretch(0)
        sizePolicy6.setHeightForWidth(self.input_Target_DockWidget.sizePolicy().hasHeightForWidth())
        self.input_Target_DockWidget.setSizePolicy(sizePolicy6)
        self.input_Target_DockWidget.setMinimumSize(QSize(340, 369))
        self.input_Target_DockWidget.setFeatures(QDockWidget.DockWidgetFeature.DockWidgetFloatable|QDockWidget.DockWidgetFeature.DockWidgetMovable)
        self.dockWidgetContents = QWidget()
        self.dockWidgetContents.setObjectName(u"dockWidgetContents")
        self.gridLayout_4 = QGridLayout(self.dockWidgetContents)
        self.gridLayout_4.setObjectName(u"gridLayout_4")
        self.vboxLayout = QVBoxLayout()
        self.vboxLayout.setObjectName(u"vboxLayout")
        self.groupBox_TargetVideos_Select = QGroupBox(self.dockWidgetContents)
        self.groupBox_TargetVideos_Select.setObjectName(u"groupBox_TargetVideos_Select")
        self.gridLayout_3 = QGridLayout(self.groupBox_TargetVideos_Select)
        self.gridLayout_3.setObjectName(u"gridLayout_3")
        self.horizontalLayout_7 = QHBoxLayout()
        self.horizontalLayout_7.setObjectName(u"horizontalLayout_7")
        self.labelTargetVideosPath = QLabel(self.groupBox_TargetVideos_Select)
        self.labelTargetVideosPath.setObjectName(u"labelTargetVideosPath")
        self.labelTargetVideosPath.setWordWrap(False)
        self.horizontalLayout_7.addWidget(self.labelTargetVideosPath)
        self.buttonTargetVideosPath = QPushButton(self.groupBox_TargetVideos_Select)
        self.buttonTargetVideosPath.setObjectName(u"buttonTargetVideosPath")
        sizePolicy7 = QSizePolicy(QSizePolicy.Policy.Fixed, QSizePolicy.Policy.Fixed)
        sizePolicy7.setHorizontalStretch(0)
        sizePolicy7.setVerticalStretch(0)
        sizePolicy7.setHeightForWidth(self.buttonTargetVideosPath.sizePolicy().hasHeightForWidth())
        self.buttonTargetVideosPath.setSizePolicy(sizePolicy7)
        self.buttonTargetVideosPath.setIcon(icon10)
        self.buttonTargetVideosPath.setIconSize(QSize(18, 18))
        self.buttonTargetVideosPath.setFlat(True)
        self.horizontalLayout_7.addWidget(self.buttonTargetVideosPath)
        self.gridLayout_3.addLayout(self.horizontalLayout_7, 0, 0, 1, 1)
        self.vboxLayout.addWidget(self.groupBox_TargetVideos_Select)
        self.horizontalLayout_9 = QHBoxLayout()
        self.horizontalLayout_9.setObjectName(u"horizontalLayout_9")
        self.targetVideosSearchBox = QLineEdit(self.dockWidgetContents)
        self.targetVideosSearchBox.setObjectName(u"targetVideosSearchBox")
        self.horizontalLayout_9.addWidget(self.targetVideosSearchBox)
        self.filterImagesCheckBox = QCheckBox(self.dockWidgetContents)
        self.filterImagesCheckBox.setObjectName(u"filterImagesCheckBox")
        icon13 = QIcon()
        icon13.addFile(u":/media/media/image.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.filterImagesCheckBox.setIcon(icon13)
        self.filterImagesCheckBox.setChecked(True)
        self.horizontalLayout_9.addWidget(self.filterImagesCheckBox)
        self.filterVideosCheckBox = QCheckBox(self.dockWidgetContents)
        self.filterVideosCheckBox.setObjectName(u"filterVideosCheckBox")
        icon14 = QIcon()
        icon14.addFile(u":/media/media/video.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.filterVideosCheckBox.setIcon(icon14)
        self.filterVideosCheckBox.setChecked(True)
        self.horizontalLayout_9.addWidget(self.filterVideosCheckBox)
        self.filterWebcamsCheckBox = QCheckBox(self.dockWidgetContents)
        self.filterWebcamsCheckBox.setObjectName(u"filterWebcamsCheckBox")
        icon15 = QIcon()
        icon15.addFile(u":/media/media/webcam.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.filterWebcamsCheckBox.setIcon(icon15)
        self.filterWebcamsCheckBox.setChecked(False)
        self.horizontalLayout_9.addWidget(self.filterWebcamsCheckBox)
        self.vboxLayout.addLayout(self.horizontalLayout_9)
        self.targetVideosList = QListWidget(self.dockWidgetContents)
        self.targetVideosList.setObjectName(u"targetVideosList")
        self.targetVideosList.setAcceptDrops(True)
        self.targetVideosList.setAutoScroll(False)
        self.vboxLayout.addWidget(self.targetVideosList)
        self.groupBox_InputFaces_Select = QGroupBox(self.dockWidgetContents)
        self.groupBox_InputFaces_Select.setObjectName(u"groupBox_InputFaces_Select")
        self.gridLayout = QGridLayout(self.groupBox_InputFaces_Select)
        self.gridLayout.setObjectName(u"gridLayout")
        self.horizontalLayout_8 = QHBoxLayout()
        self.horizontalLayout_8.setObjectName(u"horizontalLayout_8")
        self.labelInputFacesPath = QLabel(self.groupBox_InputFaces_Select)
        self.labelInputFacesPath.setObjectName(u"labelInputFacesPath")
        self.horizontalLayout_8.addWidget(self.labelInputFacesPath)
        self.buttonInputFacesPath = QPushButton(self.groupBox_InputFaces_Select)
        self.buttonInputFacesPath.setObjectName(u"buttonInputFacesPath")
        sizePolicy7.setHeightForWidth(self.buttonInputFacesPath.sizePolicy().hasHeightForWidth())
        self.buttonInputFacesPath.setSizePolicy(sizePolicy7)
        self.buttonInputFacesPath.setIcon(icon10)
        self.buttonInputFacesPath.setIconSize(QSize(18, 18))
        self.buttonInputFacesPath.setFlat(True)
        self.horizontalLayout_8.addWidget(self.buttonInputFacesPath)
        self.gridLayout.addLayout(self.horizontalLayout_8, 0, 0, 1, 1)
        self.vboxLayout.addWidget(self.groupBox_InputFaces_Select)
        self.inputFacesSearchBox = QLineEdit(self.dockWidgetContents)
        self.inputFacesSearchBox.setObjectName(u"inputFacesSearchBox")
        self.vboxLayout.addWidget(self.inputFacesSearchBox)
        self.inputFacesList = QListWidget(self.dockWidgetContents)
        self.inputFacesList.setObjectName(u"inputFacesList")
        self.inputFacesList.setAcceptDrops(True)
        self.inputFacesList.setAutoScroll(False)
        self.vboxLayout.addWidget(self.inputFacesList)
        self.gridLayout_4.addLayout(self.vboxLayout, 0, 0, 1, 1)
        self.input_Target_DockWidget.setWidget(self.dockWidgetContents)
        MainWindow.addDockWidget(Qt.DockWidgetArea.LeftDockWidgetArea, self.input_Target_DockWidget)
        self.controlOptionsDockWidget = QDockWidget(MainWindow)
        self.controlOptionsDockWidget.setObjectName(u"controlOptionsDockWidget")
        self.controlOptionsDockWidget.setFeatures(QDockWidget.DockWidgetFeature.DockWidgetFloatable|QDockWidget.DockWidgetFeature.DockWidgetMovable)
        self.dockWidgetContents_2 = QWidget()
        self.dockWidgetContents_2.setObjectName(u"dockWidgetContents_2")
        self.gridLayout_5 = QGridLayout(self.dockWidgetContents_2)
        self.gridLayout_5.setObjectName(u"gridLayout_5")
        self.tabWidget = QTabWidget(self.dockWidgetContents_2)
        self.tabWidget.setObjectName(u"tabWidget")
        sizePolicy8 = QSizePolicy(QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Preferred)
        sizePolicy8.setHorizontalStretch(1)
        sizePolicy8.setVerticalStretch(0)
        sizePolicy8.setHeightForWidth(self.tabWidget.sizePolicy().hasHeightForWidth())
        self.tabWidget.setSizePolicy(sizePolicy8)
        font1 = QFont()
        font1.setFamilies([u"Segoe UI Semibold"])
        font1.setPointSize(10)
        font1.setBold(True)
        self.tabWidget.setFont(font1)
        self.tabWidget.setLayoutDirection(Qt.LayoutDirection.LeftToRight)
        self.tabWidget.setTabPosition(QTabWidget.TabPosition.North)
        self.tabWidget.setTabsClosable(False)
        self.tabWidget.setMovable(True)
        self.tabWidget.setTabBarAutoHide(False)
        self.face_swap_tab = QWidget()
        self.face_swap_tab.setObjectName(u"face_swap_tab")
        self.verticalLayout_4 = QVBoxLayout(self.face_swap_tab)
        self.verticalLayout_4.setObjectName(u"verticalLayout_4")
        self.swapWidgetsLayout = QVBoxLayout()
        self.swapWidgetsLayout.setObjectName(u"swapWidgetsLayout")
        self.verticalLayout_4.addLayout(self.swapWidgetsLayout)
        self.tabWidget.addTab(self.face_swap_tab, "")
        self.face_editor_tab = QWidget()
        self.face_editor_tab.setObjectName(u"face_editor_tab")
        self.verticalLayout_3 = QVBoxLayout(self.face_editor_tab)
        self.verticalLayout_3.setObjectName(u"verticalLayout_3")
        self.faceEditorWidgetsLayout = QVBoxLayout()
        self.faceEditorWidgetsLayout.setObjectName(u"faceEditorWidgetsLayout")
        self.verticalLayout_3.addLayout(self.faceEditorWidgetsLayout)
        self.tabWidget.addTab(self.face_editor_tab, "")
        self.common_tab = QWidget()
        self.common_tab.setObjectName(u"common_tab")
        self.commonWidgetsLayout_1 = QVBoxLayout(self.common_tab)
        self.commonWidgetsLayout_1.setObjectName(u"commonWidgetsLayout_1")
        self.commonWidgetsLayout = QVBoxLayout()
        self.commonWidgetsLayout.setObjectName(u"commonWidgetsLayout")
        self.commonWidgetsLayout_1.addLayout(self.commonWidgetsLayout)
        self.tabWidget.addTab(self.common_tab, "")
        self.settings_tab = QWidget()
        self.settings_tab.setObjectName(u"settings_tab")
        self.verticalLayout_2 = QVBoxLayout(self.settings_tab)
        self.verticalLayout_2.setObjectName(u"verticalLayout_2")
        self.label = QLabel(self.settings_tab)
        self.label.setObjectName(u"label")
        self.verticalLayout_2.addWidget(self.label)
        self.settingsWidgetsLayout = QVBoxLayout()
        self.settingsWidgetsLayout.setObjectName(u"settingsWidgetsLayout")
        self.outputFolderSelectionLayout = QHBoxLayout()
        self.outputFolderSelectionLayout.setObjectName(u"outputFolderSelectionLayout")
        self.outputFolderLineEdit = QLineEdit(self.settings_tab)
        self.outputFolderLineEdit.setObjectName(u"outputFolderLineEdit")
        self.outputFolderLineEdit.setReadOnly(True)
        self.outputFolderSelectionLayout.addWidget(self.outputFolderLineEdit)
        self.outputFolderButton = QPushButton(self.settings_tab)
        self.outputFolderButton.setObjectName(u"outputFolderButton")
        self.outputFolderButton.setFlat(False)
        self.outputFolderSelectionLayout.addWidget(self.outputFolderButton)
        self.settingsWidgetsLayout.addLayout(self.outputFolderSelectionLayout)
        self.verticalLayout_2.addLayout(self.settingsWidgetsLayout)
        self.tabWidget.addTab(self.settings_tab, "")
        self.gridLayout_5.addWidget(self.tabWidget, 1, 0, 1, 1)
        self.horizontalLayout_2 = QHBoxLayout()
        self.horizontalLayout_2.setObjectName(u"horizontalLayout_2")
        self.vramProgressBar = QProgressBar(self.dockWidgetContents_2)
        self.vramProgressBar.setObjectName(u"vramProgressBar")
        self.vramProgressBar.setValue(24)
        self.horizontalLayout_2.addWidget(self.vramProgressBar)
        self.clearMemoryButton = QPushButton(self.dockWidgetContents_2)
        self.clearMemoryButton.setObjectName(u"clearMemoryButton")
        self.clearMemoryButton.setFlat(True)
        self.horizontalLayout_2.addWidget(self.clearMemoryButton)
        self.gridLayout_5.addLayout(self.horizontalLayout_2, 0, 0, 1, 1)
        self.controlOptionsDockWidget.setWidget(self.dockWidgetContents_2)
        MainWindow.addDockWidget(Qt.DockWidgetArea.RightDockWidgetArea, self.controlOptionsDockWidget)
        self.topMenuBar = QMenuBar(MainWindow)
        self.topMenuBar.setObjectName(u"topMenuBar")
        self.topMenuBar.setGeometry(QRect(0, 0, 1376, 33))
        self.menuFile = QMenu(self.topMenuBar)
        self.menuFile.setObjectName(u"menuFile")
        self.menuEdit = QMenu(self.topMenuBar)
        self.menuEdit.setObjectName(u"menuEdit")
        self.menuView = QMenu(self.topMenuBar)
        self.menuView.setObjectName(u"menuView")
        MainWindow.setMenuBar(self.topMenuBar)
        self.topMenuBar.addAction(self.menuFile.menuAction())
        self.topMenuBar.addAction(self.menuEdit.menuAction())
        self.topMenuBar.addAction(self.menuView.menuAction())
        self.menuFile.addAction(self.actionLoad_SavedWorkspace)
        self.menuFile.addAction(self.actionSave_CurrentWorkspace)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionOpen_Videos_Folder)
        self.menuFile.addAction(self.actionOpen_Video_Files)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionLoad_Source_Images_Folder)
        self.menuFile.addAction(self.actionLoad_Source_Image_Files)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionLoad_Embeddings)
        self.menuFile.addAction(self.actionSave_Embeddings)
        self.menuFile.addAction(self.actionSave_Embeddings_As)
        self.menuEdit.addAction(self.actionTest_2)
        self.menuView.addAction(self.actionView_Fullscreen_F11)
        self.retranslateUi(MainWindow)
        self.editFacesButton.setDefault(False)
        self.tabWidget.setCurrentIndex(0)
        QMetaObject.connectSlotsByName(MainWindow)
    # setupUi

    def retranslateUi(self, MainWindow):
        MainWindow.setWindowTitle(QCoreApplication.translate("MainWindow", u"VisoMaster v0.1.5 中文版-王知风", None))
        self.actionExit.setText(QCoreApplication.translate("MainWindow", u"退出", None))
        self.actionLoad_Embeddings.setText(QCoreApplication.translate("MainWindow", u"加载嵌入", None))
        self.actionSave_Embeddings.setText(QCoreApplication.translate("MainWindow", u"保存嵌入", None))
        self.actionSave_Embeddings_As.setText(QCoreApplication.translate("MainWindow", u"另存嵌入为", None))
        self.actionOpen_Videos_Folder.setText(QCoreApplication.translate("MainWindow", u"加载目标图像/视频文件夹", None))
        self.actionOpen_Video_Files.setText(QCoreApplication.translate("MainWindow", u"加载目标图像/视频文件", None))
        self.actionLoad_Source_Images_Folder.setText(QCoreApplication.translate("MainWindow", u"加载源图像文件夹", None))
        self.actionLoad_Source_Image_Files.setText(QCoreApplication.translate("MainWindow", u"加载源图像文件", None))
        self.actionView_Fullscreen_F11.setText(QCoreApplication.translate("MainWindow", u"全屏显示 (F11)", None))
        self.actionTest.setText(QCoreApplication.translate("MainWindow", u"测试", None))
        self.actionLoad_Saved_Workspace.setText(QCoreApplication.translate("MainWindow", u"加载保存的工作空间", None))
        self.actionSave_Current_Workspace.setText(QCoreApplication.translate("MainWindow", u"保存当前工作空间", None))
        self.actionTest_2.setText(QCoreApplication.translate("MainWindow", u"测试", None))
        self.actionLoad_SavedWorkspace.setText(QCoreApplication.translate("MainWindow", u"加载保存的工作空间", None))
        self.actionSave_CurrentWorkspace.setText(QCoreApplication.translate("MainWindow", u"保存当前工作空间", None))
        self.mediaPanelCheckBox.setText(QCoreApplication.translate("MainWindow", u"媒体面板", None))
        self.facesPanelCheckBox.setText(QCoreApplication.translate("MainWindow", u"面部面板", None))
        self.parametersPanelCheckBox.setText(QCoreApplication.translate("MainWindow", u"参数面板", None))
        self.faceCompareCheckBox.setText(QCoreApplication.translate("MainWindow", u"查看面部比较", None))
        self.faceMaskCheckBox.setText(QCoreApplication.translate("MainWindow", u"查看面部蒙版", None))
#if QT_CONFIG(tooltip)
        self.videoSeekLineEdit.setToolTip(QCoreApplication.translate("MainWindow", u"帧编号", None))
#endif // QT_CONFIG(tooltip)
        self.frameRewindButton.setText("")
        self.buttonMediaRecord.setText("")
        self.buttonMediaPlay.setText("")
        self.frameAdvanceButton.setText("")
#if QT_CONFIG(tooltip)
        self.addMarkerButton.setToolTip(QCoreApplication.translate("MainWindow", u"添加标记", None))
#endif // QT_CONFIG(tooltip)
        self.addMarkerButton.setText("")
#if QT_CONFIG(tooltip)
        self.removeMarkerButton.setToolTip(QCoreApplication.translate("MainWindow", u"移除标记", None))
#endif // QT_CONFIG(tooltip)
        self.removeMarkerButton.setText("")
#if QT_CONFIG(tooltip)
        self.previousMarkerButton.setToolTip(QCoreApplication.translate("MainWindow", u"移到上一个标记", None))
#endif // QT_CONFIG(tooltip)
        self.previousMarkerButton.setText("")
#if QT_CONFIG(tooltip)
        self.nextMarkerButton.setToolTip(QCoreApplication.translate("MainWindow", u"移到下一个标记", None))
#endif // QT_CONFIG(tooltip)
        self.nextMarkerButton.setText("")
#if QT_CONFIG(tooltip)
        self.viewFullScreenButton.setToolTip(QCoreApplication.translate("MainWindow", u"全屏显示 (F11)", None))
#endif // QT_CONFIG(tooltip)
        self.viewFullScreenButton.setText("")
        self.findTargetFacesButton.setText(QCoreApplication.translate("MainWindow", u"查找面部", None))
        self.clearTargetFacesButton.setText(QCoreApplication.translate("MainWindow", u"清除面部", None))
        self.swapfacesButton.setText(QCoreApplication.translate("MainWindow", u"交换面部", None))
        self.editFacesButton.setText(QCoreApplication.translate("MainWindow", u"编辑面部", None))
#if QT_CONFIG(tooltip)
        self.inputEmbeddingsList.setToolTip(QCoreApplication.translate("MainWindow", u"保存嵌入", None))
#endif // QT_CONFIG(tooltip)
        self.saveImageButton.setText(QCoreApplication.translate("MainWindow", u"保存图像", None))
        self.inputEmbeddingsSearchBox.setPlaceholderText(QCoreApplication.translate("MainWindow", u"搜索嵌入", None))
#if QT_CONFIG(tooltip)
        self.openEmbeddingButton.setToolTip(QCoreApplication.translate("MainWindow", u"打开嵌入文件", None))
#endif // QT_CONFIG(tooltip)
        self.openEmbeddingButton.setText("")
#if QT_CONFIG(tooltip)
        self.saveEmbeddingButton.setToolTip(QCoreApplication.translate("MainWindow", u"保存嵌入", None))
#endif // QT_CONFIG(tooltip)
        self.saveEmbeddingButton.setText("")
#if QT_CONFIG(tooltip)
        self.saveEmbeddingAsButton.setToolTip(QCoreApplication.translate("MainWindow", u"另存嵌入为", None))
#endif // QT_CONFIG(tooltip)
        self.saveEmbeddingAsButton.setText("")
        self.input_Target_DockWidget.setWindowTitle(QCoreApplication.translate("MainWindow", u"目标视频和输入面部", None))
        self.groupBox_TargetVideos_Select.setTitle(QCoreApplication.translate("MainWindow", u"目标视频/图像", None))
        self.labelTargetVideosPath.setText(QCoreApplication.translate("MainWindow", u"选择视频/图像路径", None))
#if QT_CONFIG(tooltip)
        self.buttonTargetVideosPath.setToolTip(QCoreApplication.translate("MainWindow", u"选择目标媒体文件夹", None))
#endif // QT_CONFIG(tooltip)
        self.buttonTargetVideosPath.setText("")
        self.targetVideosSearchBox.setText("")
        self.targetVideosSearchBox.setPlaceholderText(QCoreApplication.translate("MainWindow", u"搜索视频/图像", None))
#if QT_CONFIG(tooltip)
        self.filterImagesCheckBox.setToolTip(QCoreApplication.translate("MainWindow", u"包含图像", None))
#endif // QT_CONFIG(tooltip)
        self.filterImagesCheckBox.setText("")
#if QT_CONFIG(tooltip)
        self.filterVideosCheckBox.setToolTip(QCoreApplication.translate("MainWindow", u"包含视频", None))
#endif // QT_CONFIG(tooltip)
        self.filterVideosCheckBox.setText("")
#if QT_CONFIG(tooltip)
        self.filterWebcamsCheckBox.setToolTip(QCoreApplication.translate("MainWindow", u"包含网络摄像头", None))
#endif // QT_CONFIG(tooltip)
        self.filterWebcamsCheckBox.setText("")
        self.groupBox_InputFaces_Select.setTitle(QCoreApplication.translate("MainWindow", u"输入面部", None))
        self.labelInputFacesPath.setText(QCoreApplication.translate("MainWindow", u"选择面部图像路径", None))
#if QT_CONFIG(tooltip)
        self.buttonInputFacesPath.setToolTip(QCoreApplication.translate("MainWindow", u"选择输入面部文件夹", None))
#endif // QT_CONFIG(tooltip)
        self.buttonInputFacesPath.setText("")
        self.inputFacesSearchBox.setPlaceholderText(QCoreApplication.translate("MainWindow", u"搜索面部", None))
        self.controlOptionsDockWidget.setWindowTitle(QCoreApplication.translate("MainWindow", u"控制选项", None))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.face_swap_tab), QCoreApplication.translate("MainWindow", u"面部交换", None))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.face_editor_tab), QCoreApplication.translate("MainWindow", u"面部编辑", None))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.common_tab), QCoreApplication.translate("MainWindow", u"通用", None))
        self.label.setText(QCoreApplication.translate("MainWindow", u"输出目录", None))
        self.outputFolderButton.setText(QCoreApplication.translate("MainWindow", u"浏览文件夹", None))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.settings_tab), QCoreApplication.translate("MainWindow", u"设置", None))
        self.clearMemoryButton.setText(QCoreApplication.translate("MainWindow", u"清除显存", None))
        self.menuFile.setTitle(QCoreApplication.translate("MainWindow", u"文件", None))
        self.menuEdit.setTitle(QCoreApplication.translate("MainWindow", u"编辑", None))
        self.menuView.setTitle(QCoreApplication.translate("MainWindow", u"视图", None))
    # retranslateUi
